# don't wait for an escape sequence after hitting
# Esc. fixes insert mode exit lag in vim
set -sg escape-time 0

set-option -gw xterm-keys on

set -g prefix C-a
unbind C-b

 # set window and pane index to 1 (0 by default)
set-option -g base-index 1
setw -g pane-base-index 1

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# bind -n C-k send-keys -R \; clear-history
# bind-key b send-keys -R \; clear-history
bind-key -n C-r send-keys "clear" \; send-keys "Enter"

# COLORS \o/
set -g default-terminal "screen-256color"

# PASTEBOARD \o/
set -g default-command "reattach-to-user-namespace -l $SHELL"

# keep windows ordered and start at 1
set -g renumber-windows on
set -g base-index 1
setw -g pane-base-index 1

# vi-like key bindings for copy-mode
setw -g mode-keys vi

# yank to pasteboard
bind -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# fast switch to last pane
bind C-b last-pane

# switch between panes with hjkl
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# easier to remember splits
bind _ split-window -v -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"

# keep new windows on current path
bind c new-window -c "#{pane_current_path}"

# clean up status bar
set -g status-left ''
set -g status-right ''

# color status bar
set -g status-bg colour235
set -g status-fg green

# highlight current window
setw -g window-status-current-bg green
setw -g window-status-current-fg colour235

# set color of active pane
set -g pane-border-fg colour235
set -g pane-active-border-fg green

# Create splits and vertical splits
bind-key v split-window -h -p 50 -c "#{pane_current_path}"
bind-key ^V split-window -h -p 50 -c "#{pane_current_path}"
bind-key s split-window -p 50 -c "#{pane_current_path}"
bind-key ^S split-window -p 50 -c "#{pane_current_path}"

# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to shift-ctrl-<h,j,k,l> in iTerm.
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

bind-key & kill-window
bind-key x kill-pane

bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

set-option -g prefix C-a
bind-key C-a last-window

# enable mouse scrolling
setw -g mode-mouse on
